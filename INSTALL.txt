INTRODUCTION
`------------

This file describes how to install dislocker onto your machine.



REQUIREMENTS
`------------

You need:
 - Compiler, gcc or clang;
 - cmake (at least version 2.6)
 - make (or gmake, for FreeBSD)
 - Headers for FUSE;
 - Headers for PolarSSL/mbedTLS;
 - A partition encrypted with BitLocker, from Windows Vista, 7 or 8.

If you have Ruby headers, the library will compile with some Ruby bindings and
another program - see the NOTE section below - will be available.

For Debian-like:
  aptitude install gcc cmake make libfuse-dev libpolarssl-dev ruby-dev
For Fedora-like:
  yum install gcc cmake make fuse-devel polarssl-devel ruby-devel
For FreeBSD:
  pkg install cmake gmake fusefs-libs polarssl
For OSX: Follow the instructions in the next section.

Note that the code expects at least FUSE 2.6.



INSTALLING
`----------

Each OS type has its own section below, beware to follow yours:

. If you are on MacOSX, just install Homebrew (http://brew.sh/) and run the
following command:
  brew install src/dislocker.rb
This will install dislocker.
For OSX users, it's highly possible that you have to follow the `mbedTLS 2.0.0'
section below. If so, you will have to build dislocker from source, without the
help of Homebrew.

. If you're on FreeBSD, follow the instructions below (next point) by replacing
`make' with `gmake':

. If you aren't on MacOSX...
If you already have installed the dependencies (see REQUIREMENTS section above),
you have to type the following commands to install the binaries on your system:
  cmake .
  make
  sudo make install
Don't forget the dot (.) on the cmake command-line. If you only want to generate
the binaries, without installing them, you can skip the last command (the one
beginning with sudo).

Note that the `-Werror' flag in the cmake WARN_FLAGS variable may break the
compilation for useless warnings. If you know what you're doing, you can remove
it by running the following cmake command instead of the one above:
  cmake -D WARN_FLAGS:STRING="-Wall -Werror -Wextra" .

See the cmake documentation (on http://www.cmake.org/documentation/) if you want
to customize the build.

Once installed, see dislocker(1) for details on how to use it.



UNINSTALLING
`------------

I'm sure you don't want to do that. But if you're really forced by someone, just
type `make uninstall` as super-user.



mbedTLS 2.0.0
`-------------

Since the version 2.0.0 of mbedTLS, the build separate "crypto" functions such
as AES and SHA256 into a separate, libmbedcrypto, library. However, a typo
didn't installed this library, resulting in some packagers not providing this
library, thus breaking the dislocker compilation.
If you have this problem, it's recommended to run the following commands:
  git clone https://github.com/ARMmbed/mbedtls.git
  cd mbedtls
  git checkout master
And compile the library:
  cmake .
  make
Finally, come back to the dislocker directory and modify src/CMakeLists.txt by
replacing the following line (around line 107):
  set (LIB "${LIB} ${POLARSSL_LIBRARIES}")
by
  set (LIB "${LIB} /path/to/mbedtls/library/libmbedcrypto.a")

You can then resume the installation where you have left it.



PORTABILITY
`-----------

Globally, this was successfuly tested on Linux x86/x86_64, MacOSX and FreeBSD.
It won't work on Windows and may not work on other BSDs (not tested).

For MacOSX, it has been tested against OSXFUSE 2.3.8 and 2.3.9.

Cases where you need to remove the `-Werror' from the WARN_FLAGS variable:
 - You're on Ubuntu 10.04;
 - You're using GCC with a version older than 4.3.


Whether it works or not, feel free to send comments and feedbacks to
<dislocker __AT__ hsc __DOT__ fr>.



NOTE
`----

Five binaries are built when compiling dislocker as described above:
- One for disecting a .bek file and printing information about it
  > dislocker-bek
- Another one for printing information about a BitLocker-encrypted volume
  > dislocker-metadata
- A third one is not a binary but a Ruby script which try to find BitLocker
  encrypted partition among the plugged-in disks (only work if the library is
  compiled with the ruby bindings)
  > dislocker-find
- Another one for decrypting a BitLocker encrypted partition into a flat file
formatted as an NTFS partition you can mount
  > dislocker-file
- A last one, which is the one you're using when calling `dislocker',
dynamically decrypts a BitLocker encrypted partition using FUSE
  > dislocker-fuse


You can build each one independently providing it as the makefile target. For
instance, if you want to compile dislocker-fuse only, you'd simply run:
  cmake .
  make dislocker-fuse

